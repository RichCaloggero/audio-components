https://www.smashingmagazine.com/2013/05/centering-elements-with-flexbox/
https://www.smashingmagazine.com/2015/08/flexible-future-for-web-design-with-flexbox/
https://www.smashingmagazine.com/2016/11/css-grids-flexbox-and-box-alignment-our-new-system-for-web-layout/
https://www.smashingmagazine.com/2015/03/harnessing-flexbox-for-todays-web-apps/

We need to tell browsers that these elements will be, um, flexible.
.flex-container,
.flex-container header,
.flex-container footer {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

.message {
  flex-basis: 70%;
}
.message-list {
  flex-basis: 15%;
}
.mailbox-list {
  flex-basis: 15%;
}
.flex-container header,
.flex-container footer {
  width: 100%;
  height: 5rem;
}
Here, flex-basis is like width — as long as the main axis is horizontal. If we dangle the rope from the top, then flex-basis becomes height automatically. Handy!

